{
  "application": {
    "getAdvancedSettings": {
      "method": "GET",
      "responseType": "ApplicationPropertyBean[]",
      "url": "/api/2/application-properties/advanced-settings"
    },
    "getApplicationProperty": {
      "method": "GET",
      "params": {
        "key": {
          "in": "query",
          "type": "string"
        },
        "keyFilter": {
          "in": "query",
          "type": "string"
        },
        "permissionLevel": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "ApplicationPropertyBean[]",
      "url": "/api/2/application-properties"
    },
    "setApplicationProperty": {
      "bodyType": "SimpleApplicationPropertyBean",
      "method": "PUT",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "ApplicationPropertyBean",
      "url": "/api/2/application-properties/{id}"
    }
  },
  "applicationrole": {
    "getAllApplicationRoles": {
      "method": "GET",
      "responseType": "ApplicationRoleBean[]",
      "url": "/api/2/applicationrole"
    },
    "getApplicationRole": {
      "method": "GET",
      "params": {
        "key": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "ApplicationRoleBean",
      "url": "/api/2/applicationrole/{key}"
    }
  },
  "attachment": {
    "deleteAttachment": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/attachment/{id}"
    },
    "getAllMetadataForAnExpandedAttachment": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "HumanReadableArchive",
      "url": "/api/2/attachment/{id}/expand/human"
    },
    "getAttachmentMetadata": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "AttachmentBean",
      "url": "/api/2/attachment/{id}"
    },
    "getContentsMetadataForAnExpandedAttachment": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "AttachmentArchiveImpl",
      "url": "/api/2/attachment/{id}/expand/raw"
    },
    "getGlobalAttachmentSettings": {
      "method": "GET",
      "responseType": "AttachmentMetaBean",
      "url": "/api/2/attachment/meta"
    }
  },
  "auditing": {
    "getAuditRecords": {
      "method": "GET",
      "params": {
        "filter": {
          "in": "query",
          "type": "string"
        },
        "from": {
          "in": "query",
          "type": "string"
        },
        "limit": {
          "in": "query",
          "type": "integer"
        },
        "offset": {
          "in": "query",
          "type": "integer"
        },
        "to": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "AuditingResponseBean",
      "url": "/api/2/auditing/record"
    }
  },
  "avatar": {
    "getSystemAvatarsByType": {
      "method": "GET",
      "params": {
        "type": {
          "enum": [
            "issuetype",
            "project",
            "user"
          ],
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "SystemAvatars",
      "url": "/api/2/avatar/{type}/system"
    }
  },
  "comment": {
    "deleteCommentProperty": {
      "method": "DELETE",
      "params": {
        "commentId": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/comment/{commentId}/properties/{propertyKey}"
    },
    "getCommentProperty": {
      "method": "GET",
      "params": {
        "commentId": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "EntityPropertyBean",
      "url": "/api/2/comment/{commentId}/properties/{propertyKey}"
    },
    "getCommentPropertyKeys": {
      "method": "GET",
      "params": {
        "commentId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "EntityPropertiesKeysBean",
      "url": "/api/2/comment/{commentId}/properties"
    },
    "getCommentsByIDs": {
      "bodyType": "IssueCommentListRequestBean",
      "method": "POST",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "PageBeanCommentJsonBean",
      "url": "/api/2/comment/list"
    },
    "setCommentProperty": {
      "bodyType": "ComAtlassianJiraRestV2IssueCommentPropertyResourceSetCommentPropertyPutBody",
      "method": "PUT",
      "params": {
        "commentId": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/comment/{commentId}/properties/{propertyKey}"
    }
  },
  "component": {
    "createComponent": {
      "bodyType": "ComponentBean",
      "method": "POST",
      "responseType": "ComponentBean",
      "url": "/api/2/component"
    },
    "deleteComponent": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "moveIssuesTo": {
          "in": "query",
          "type": "string"
        }
      },
      "url": "/api/2/component/{id}"
    },
    "getComponent": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "ComponentBean",
      "url": "/api/2/component/{id}"
    },
    "getComponentIssuesCount": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "ComponentIssueCountsBean",
      "url": "/api/2/component/{id}/relatedIssueCounts"
    },
    "updateComponent": {
      "bodyType": "ComponentBean",
      "method": "PUT",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "ComponentBean",
      "url": "/api/2/component/{id}"
    }
  },
  "configuration": {
    "disableTimeTracking": {
      "method": "DELETE",
      "url": "/api/2/configuration/timetracking"
    },
    "getAllTimeTrackingProviders": {
      "method": "GET",
      "responseType": "TimeTrackingImplementationBean[]",
      "url": "/api/2/configuration/timetracking/list"
    },
    "getGlobalSettings": {
      "method": "GET",
      "responseType": "ConfigurationBean",
      "url": "/api/2/configuration"
    },
    "getSelectedTimeTrackingProvider": {
      "method": "GET",
      "responseType": "TimeTrackingImplementationBean",
      "url": "/api/2/configuration/timetracking"
    },
    "getTimeTrackingSettings": {
      "method": "GET",
      "responseType": "TimeTrackingConfigurationBean",
      "url": "/api/2/configuration/timetracking/options"
    },
    "selectTimeTrackingProvider": {
      "bodyType": "TimeTrackingImplementationBean",
      "method": "PUT",
      "url": "/api/2/configuration/timetracking"
    },
    "setTimeTrackingSettings": {
      "bodyType": "TimeTrackingConfigurationBean",
      "method": "PUT",
      "responseType": "TimeTrackingConfigurationBean",
      "url": "/api/2/configuration/timetracking/options"
    }
  },
  "customFieldOption": {
    "getCustomFieldOption": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "CustomFieldOptionBean",
      "url": "/api/2/customFieldOption/{id}"
    }
  },
  "dashboard": {
    "deleteDashboardItemProperty": {
      "method": "DELETE",
      "params": {
        "dashboardId": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "itemId": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/dashboard/{dashboardId}/items/{itemId}/properties/{propertyKey}"
    },
    "getAllDashboards": {
      "method": "GET",
      "params": {
        "filter": {
          "enum": [
            "my",
            "favourite"
          ],
          "in": "query",
          "type": "string"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "DashboardsBean",
      "url": "/api/2/dashboard"
    },
    "getDashboard": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "DashboardBean",
      "url": "/api/2/dashboard/{id}"
    },
    "getDashboardItemProperty": {
      "method": "GET",
      "params": {
        "dashboardId": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "itemId": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "EntityPropertyBean",
      "url": "/api/2/dashboard/{dashboardId}/items/{itemId}/properties/{propertyKey}"
    },
    "getDashboardItemPropertyKeys": {
      "method": "GET",
      "params": {
        "dashboardId": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "itemId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "EntityPropertiesKeysBean",
      "url": "/api/2/dashboard/{dashboardId}/items/{itemId}/properties"
    },
    "setDashboardItemProperty": {
      "method": "PUT",
      "params": {
        "dashboardId": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "itemId": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/dashboard/{dashboardId}/items/{itemId}/properties/{propertyKey}"
    }
  },
  "expression": {
    "evaluateJiraExpression": {
      "bodyType": "JiraExpressionEvalRequestBean",
      "method": "POST",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "JiraExpressionResultBean",
      "url": "/api/2/expression/eval"
    }
  },
  "field": {
    "createCustomField": {
      "bodyType": "CustomFieldDefinitionJsonBean",
      "method": "POST",
      "responseType": "FieldBean",
      "url": "/api/2/field"
    },
    "createIssueFieldOption": {
      "bodyType": "IssueFieldOptionCreateBean",
      "method": "POST",
      "params": {
        "fieldKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "IssueFieldOptionBean",
      "url": "/api/2/field/{fieldKey}/option"
    },
    "deleteIssueFieldOption": {
      "method": "DELETE",
      "params": {
        "fieldKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "optionId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "url": "/api/2/field/{fieldKey}/option/{optionId}"
    },
    "getAllIssueFieldOptions": {
      "method": "GET",
      "params": {
        "fieldKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "PageBeanIssueFieldOptionBean",
      "url": "/api/2/field/{fieldKey}/option"
    },
    "getFields": {
      "method": "GET",
      "responseType": "FieldBean[]",
      "url": "/api/2/field"
    },
    "getIssueFieldOption": {
      "method": "GET",
      "params": {
        "fieldKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "optionId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "IssueFieldOptionBean",
      "url": "/api/2/field/{fieldKey}/option/{optionId}"
    },
    "getSelectableIssueFieldOptions": {
      "method": "GET",
      "params": {
        "fieldKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "projectId": {
          "in": "query",
          "type": "integer"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "PageBeanIssueFieldOptionBean",
      "url": "/api/2/field/{fieldKey}/option/suggestions/edit"
    },
    "getVisibleIssueFieldOptions": {
      "method": "GET",
      "params": {
        "fieldKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "projectId": {
          "in": "query",
          "type": "integer"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "PageBeanIssueFieldOptionBean",
      "url": "/api/2/field/{fieldKey}/option/suggestions/search"
    },
    "replaceIssueFieldOption": {
      "method": "DELETE",
      "params": {
        "fieldKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "jql": {
          "in": "query",
          "type": "string"
        },
        "optionId": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "replaceWith": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "TaskProgressBeanRemoveOptionFromIssuesResult",
      "url": "/api/2/field/{fieldKey}/option/{optionId}/issue"
    },
    "updateIssueFieldOption": {
      "bodyType": "IssueFieldOptionBean",
      "method": "PUT",
      "params": {
        "fieldKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "optionId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "IssueFieldOptionBean",
      "url": "/api/2/field/{fieldKey}/option/{optionId}"
    }
  },
  "filter": {
    "addFilterAsFavorite": {
      "method": "PUT",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "FilterBean",
      "url": "/api/2/filter/{id}/favourite"
    },
    "addSharePermission": {
      "bodyType": "SharePermissionInputBean",
      "method": "POST",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "FilterPermissionBean[]",
      "url": "/api/2/filter/{id}/permission"
    },
    "createFilter": {
      "bodyType": "FilterBean",
      "method": "POST",
      "params": {
        "expand": {
          "enum": [
            "sharedUsers",
            "subscriptions"
          ],
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "FilterBean",
      "url": "/api/2/filter"
    },
    "deleteFilter": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "url": "/api/2/filter/{id}"
    },
    "deleteSharePermission": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "permissionId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "url": "/api/2/filter/{id}/permission/{permissionId}"
    },
    "getColumns": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "ColumnItem[]",
      "url": "/api/2/filter/{id}/columns"
    },
    "getDefaultShareScope": {
      "method": "GET",
      "responseType": "DefaultShareScopeBean",
      "url": "/api/2/filter/defaultShareScope"
    },
    "getFavouriteFilters": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "FilterBean[]",
      "url": "/api/2/filter/favourite"
    },
    "getFilter": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "FilterBean",
      "url": "/api/2/filter/{id}"
    },
    "getFilters": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "FilterBean[]",
      "url": "/api/2/filter"
    },
    "getMyFilters": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "includeFavourites": {
          "in": "query",
          "type": "boolean"
        }
      },
      "responseType": "FilterBean[]",
      "url": "/api/2/filter/my"
    },
    "getSharePermission": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "permissionId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "FilterPermissionBean",
      "url": "/api/2/filter/{id}/permission/{permissionId}"
    },
    "getSharePermissions": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "FilterPermissionBean[]",
      "url": "/api/2/filter/{id}/permission"
    },
    "removeFilterAsFavorite": {
      "method": "DELETE",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "FilterBean",
      "url": "/api/2/filter/{id}/favourite"
    },
    "resetColumns": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "url": "/api/2/filter/{id}/columns"
    },
    "searchForFilters": {
      "method": "GET",
      "params": {
        "accountId": {
          "in": "query",
          "type": "string"
        },
        "expand": {
          "in": "query",
          "type": "string"
        },
        "filterName": {
          "in": "query",
          "type": "string"
        },
        "groupname": {
          "in": "query",
          "type": "string"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "id",
            "name",
            "description",
            "owner",
            "favorite_count",
            "is_favorite",
            "-id",
            "-name",
            "-description",
            "-owner",
            "-favorite_count",
            "-is_favorite"
          ],
          "in": "query",
          "type": "string"
        },
        "owner": {
          "in": "query",
          "type": "string"
        },
        "projectId": {
          "in": "query",
          "type": "integer"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "PageBeanFilterBean2",
      "url": "/api/2/filter/search"
    },
    "setColumns": {
      "method": "PUT",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "url": "/api/2/filter/{id}/columns"
    },
    "setDefaultShareScope": {
      "bodyType": "DefaultShareScopeBean",
      "method": "PUT",
      "responseType": "DefaultShareScopeBean",
      "url": "/api/2/filter/defaultShareScope"
    },
    "updateFilter": {
      "bodyType": "FilterBean",
      "method": "PUT",
      "params": {
        "expand": {
          "enum": [
            "sharedUsers",
            "subscriptions"
          ],
          "in": "query",
          "type": "string"
        },
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "FilterBean",
      "url": "/api/2/filter/{id}"
    }
  },
  "group": {
    "addUserToGroup": {
      "bodyType": "UpdateUserToGroupBean",
      "method": "POST",
      "params": {
        "groupname": {
          "in": "query",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "Group",
      "url": "/api/2/group/user"
    },
    "createGroup": {
      "bodyType": "AddGroupBean",
      "method": "POST",
      "responseType": "Group",
      "url": "/api/2/group"
    },
    "getGroup": {
      "method": "GET",
      "params": {
        "expand": {
          "enum": [
            "users"
          ],
          "in": "query",
          "type": "string"
        },
        "groupname": {
          "in": "query",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "Group",
      "url": "/api/2/group"
    },
    "getUsersFromGroup": {
      "method": "GET",
      "params": {
        "groupname": {
          "in": "query",
          "required": true,
          "type": "string"
        },
        "includeInactiveUsers": {
          "in": "query",
          "type": "boolean"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "PageBeanUserJsonBean",
      "url": "/api/2/group/member"
    },
    "removeGroup": {
      "method": "DELETE",
      "params": {
        "groupname": {
          "in": "query",
          "required": true,
          "type": "string"
        },
        "swapGroup": {
          "in": "query",
          "type": "string"
        }
      },
      "url": "/api/2/group"
    },
    "removeUserFromGroup": {
      "method": "DELETE",
      "params": {
        "accountId": {
          "in": "query",
          "type": "string"
        },
        "groupname": {
          "in": "query",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "query",
          "type": "string"
        }
      },
      "url": "/api/2/group/user"
    }
  },
  "groups": {
    "findGroups": {
      "method": "GET",
      "params": {
        "accountId": {
          "in": "query",
          "type": "string"
        },
        "exclude": {
          "in": "query",
          "itemsType": "string",
          "type": "array"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "query": {
          "in": "query",
          "type": "string"
        },
        "userName": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "GroupSuggestionsBean",
      "url": "/api/2/groups/picker"
    }
  },
  "groupuserpicker": {
    "findUsersAndGroups": {
      "method": "GET",
      "params": {
        "avatarSize": {
          "enum": [
            "xsmall",
            "xsmall@2x",
            "xsmall@3x",
            "small",
            "small@2x",
            "small@3x",
            "medium",
            "medium@2x",
            "medium@3x",
            "large",
            "large@2x",
            "large@3x",
            "xlarge",
            "xlarge@2x",
            "xlarge@3x",
            "xxlarge",
            "xxlarge@2x",
            "xxlarge@3x",
            "xxxlarge",
            "xxxlarge@2x",
            "xxxlarge@3x"
          ],
          "in": "query",
          "type": "string"
        },
        "caseInsensitive": {
          "in": "query",
          "type": "boolean"
        },
        "excludeConnectAddons": {
          "in": "query",
          "type": "boolean"
        },
        "fieldId": {
          "in": "query",
          "type": "string"
        },
        "issueTypeId": {
          "in": "query",
          "itemsType": "string",
          "type": "array"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "projectId": {
          "in": "query",
          "itemsType": "string",
          "type": "array"
        },
        "query": {
          "in": "query",
          "required": true,
          "type": "string"
        },
        "showAvatar": {
          "in": "query",
          "type": "boolean"
        }
      },
      "responseType": "UsersAndGroupsBean",
      "url": "/api/2/groupuserpicker"
    }
  },
  "issue": {
    "addAttachment": {
      "method": "POST",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "AttachmentJsonBean[]",
      "url": "/api/2/issue/{issueIdOrKey}/attachments"
    },
    "addComment": {
      "bodyType": "CommentJsonBean",
      "method": "POST",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "CommentJsonBean",
      "url": "/api/2/issue/{issueIdOrKey}/comment"
    },
    "addVote": {
      "method": "POST",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}/votes"
    },
    "addWatcher": {
      "method": "POST",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}/watchers"
    },
    "addWorklog": {
      "bodyType": "WorklogJsonBean",
      "method": "POST",
      "params": {
        "adjustEstimate": {
          "enum": [
            "new",
            "leave",
            "manual",
            "auto"
          ],
          "in": "query",
          "type": "string"
        },
        "expand": {
          "in": "query",
          "type": "string"
        },
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "newEstimate": {
          "in": "query",
          "type": "string"
        },
        "notifyUsers": {
          "in": "query",
          "type": "boolean"
        },
        "overrideEditableFlag": {
          "in": "query",
          "type": "boolean"
        },
        "reduceBy": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "WorklogJsonBean",
      "url": "/api/2/issue/{issueIdOrKey}/worklog"
    },
    "assignIssue": {
      "bodyType": "User",
      "method": "PUT",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}/assignee"
    },
    "bulkDeleteIssueProperty": {
      "bodyType": "EntityPropertyBulkDeleteFilterBean",
      "method": "DELETE",
      "params": {
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issue/properties/{propertyKey}"
    },
    "bulkIssueCreate": {
      "bodyType": "IssuesUpdateBean",
      "method": "POST",
      "responseType": "IssueCreateResponse",
      "url": "/api/2/issue/bulk"
    },
    "bulkSetIssueProperty": {
      "bodyType": "EntityPropertyBulkUpdateRequestBean",
      "method": "PUT",
      "params": {
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issue/properties/{propertyKey}"
    },
    "createIssue": {
      "bodyType": "IssueUpdateBean",
      "method": "POST",
      "params": {
        "updateHistory": {
          "in": "query",
          "type": "boolean"
        }
      },
      "responseType": "IssueCreateResponse",
      "url": "/api/2/issue"
    },
    "createOrUpdateRemoteIssueLink": {
      "bodyType": "RemoteIssueLinkRequest",
      "method": "POST",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "RemoteIssueLinkCreateOrUpdateResponse",
      "url": "/api/2/issue/{issueIdOrKey}/remotelink"
    },
    "deleteComment": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}/comment/{id}"
    },
    "deleteIssue": {
      "method": "DELETE",
      "params": {
        "deleteSubtasks": {
          "enum": [
            "true",
            "false"
          ],
          "in": "query",
          "type": "string"
        },
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}"
    },
    "deleteIssueProperty": {
      "method": "DELETE",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}/properties/{propertyKey}"
    },
    "deleteRemoteIssueLinkByGlobalId": {
      "method": "DELETE",
      "params": {
        "globalId": {
          "in": "query",
          "required": true,
          "type": "string"
        },
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}/remotelink"
    },
    "deleteRemoteIssueLinkById": {
      "method": "DELETE",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "linkId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}/remotelink/{linkId}"
    },
    "deleteVote": {
      "method": "DELETE",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}/votes"
    },
    "deleteWatcher": {
      "method": "DELETE",
      "params": {
        "accountId": {
          "in": "query",
          "type": "string"
        },
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "query",
          "type": "string"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}/watchers"
    },
    "deleteWorklog": {
      "method": "DELETE",
      "params": {
        "adjustEstimate": {
          "enum": [
            "new",
            "leave",
            "manual",
            "auto"
          ],
          "in": "query",
          "type": "string"
        },
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "increaseBy": {
          "in": "query",
          "type": "string"
        },
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "newEstimate": {
          "in": "query",
          "type": "string"
        },
        "notifyUsers": {
          "in": "query",
          "type": "boolean"
        },
        "overrideEditableFlag": {
          "in": "query",
          "type": "boolean"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}/worklog/{id}"
    },
    "deleteWorklogProperty": {
      "method": "DELETE",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "worklogId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}/worklog/{worklogId}/properties/{propertyKey}"
    },
    "editIssue": {
      "bodyType": "IssueUpdateBean",
      "method": "PUT",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "notifyUsers": {
          "in": "query",
          "type": "boolean"
        },
        "overrideEditableFlag": {
          "in": "query",
          "type": "boolean"
        },
        "overrideScreenSecurity": {
          "in": "query",
          "type": "boolean"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}"
    },
    "getChangeLogs": {
      "method": "GET",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "PageBeanChangeHistoryBean",
      "url": "/api/2/issue/{issueIdOrKey}/changelog"
    },
    "getComment": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "CommentJsonBean",
      "url": "/api/2/issue/{issueIdOrKey}/comment/{id}"
    },
    "getComments": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "created"
          ],
          "in": "query",
          "type": "string"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "PaginatedCommentsJsonBean",
      "url": "/api/2/issue/{issueIdOrKey}/comment"
    },
    "getCreateIssueMetadata": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "issuetypeIds": {
          "in": "query",
          "itemsType": "string",
          "type": "array"
        },
        "issuetypeNames": {
          "in": "query",
          "itemsType": "string",
          "type": "array"
        },
        "projectIds": {
          "in": "query",
          "itemsType": "string",
          "type": "array"
        },
        "projectKeys": {
          "in": "query",
          "itemsType": "string",
          "type": "array"
        }
      },
      "responseType": "CreateMetaBean",
      "url": "/api/2/issue/createmeta"
    },
    "getEditIssueMetadata": {
      "method": "GET",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "overrideEditableFlag": {
          "in": "query",
          "type": "boolean"
        },
        "overrideScreenSecurity": {
          "in": "query",
          "type": "boolean"
        }
      },
      "responseType": "EditMetaBean",
      "url": "/api/2/issue/{issueIdOrKey}/editmeta"
    },
    "getIssue": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "fields": {
          "in": "query",
          "itemsType": "string",
          "type": "array"
        },
        "fieldsByKeys": {
          "in": "query",
          "type": "boolean"
        },
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "properties": {
          "in": "query",
          "itemsType": "string",
          "type": "array"
        },
        "updateHistory": {
          "in": "query",
          "type": "boolean"
        }
      },
      "responseType": "IssueBean",
      "url": "/api/2/issue/{issueIdOrKey}"
    },
    "getIssuePickerSuggestions": {
      "method": "GET",
      "params": {
        "currentIssueKey": {
          "in": "query",
          "type": "string"
        },
        "currentJQL": {
          "in": "query",
          "type": "string"
        },
        "currentProjectId": {
          "in": "query",
          "type": "string"
        },
        "query": {
          "in": "query",
          "type": "string"
        },
        "showSubTaskParent": {
          "in": "query",
          "type": "boolean"
        },
        "showSubTasks": {
          "in": "query",
          "type": "boolean"
        }
      },
      "responseType": "IssuePickerResult",
      "url": "/api/2/issue/picker"
    },
    "getIssueProperty": {
      "method": "GET",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "EntityPropertyBean",
      "url": "/api/2/issue/{issueIdOrKey}/properties/{propertyKey}"
    },
    "getIssuePropertyKeys": {
      "method": "GET",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "EntityPropertiesKeysBean",
      "url": "/api/2/issue/{issueIdOrKey}/properties"
    },
    "getIssueWatchers": {
      "method": "GET",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "WatchersBean",
      "url": "/api/2/issue/{issueIdOrKey}/watchers"
    },
    "getIssueWorklogs": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "WorklogWithPaginationBean",
      "url": "/api/2/issue/{issueIdOrKey}/worklog"
    },
    "getRemoteIssueLinkById": {
      "method": "GET",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "linkId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "RemoteIssueLinkBean",
      "url": "/api/2/issue/{issueIdOrKey}/remotelink/{linkId}"
    },
    "getRemoteIssueLinks": {
      "method": "GET",
      "params": {
        "globalId": {
          "in": "query",
          "type": "string"
        },
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "RemoteIssueLinkBean[]",
      "url": "/api/2/issue/{issueIdOrKey}/remotelink"
    },
    "getTransitions": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "skipRemoteOnlyCondition": {
          "in": "query",
          "type": "boolean"
        },
        "transitionId": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "TransitionsListBean",
      "url": "/api/2/issue/{issueIdOrKey}/transitions"
    },
    "getVotes": {
      "method": "GET",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "VoteBean",
      "url": "/api/2/issue/{issueIdOrKey}/votes"
    },
    "getWorklog": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "WorklogJsonBean",
      "url": "/api/2/issue/{issueIdOrKey}/worklog/{id}"
    },
    "getWorklogProperty": {
      "method": "GET",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "worklogId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "EntityPropertyBean",
      "url": "/api/2/issue/{issueIdOrKey}/worklog/{worklogId}/properties/{propertyKey}"
    },
    "getWorklogPropertyKeys": {
      "method": "GET",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "worklogId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "EntityPropertiesKeysBean",
      "url": "/api/2/issue/{issueIdOrKey}/worklog/{worklogId}/properties"
    },
    "sendNotificationForIssue": {
      "bodyType": "NotificationJsonBean",
      "method": "POST",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}/notify"
    },
    "setIssueProperty": {
      "bodyType": "ComAtlassianJiraRestV2IssueCommentPropertyResourceSetCommentPropertyPutBody",
      "method": "PUT",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}/properties/{propertyKey}"
    },
    "setWorklogProperty": {
      "bodyType": "ComAtlassianJiraRestV2IssueCommentPropertyResourceSetCommentPropertyPutBody",
      "method": "PUT",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "worklogId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}/worklog/{worklogId}/properties/{propertyKey}"
    },
    "transitionIssue": {
      "bodyType": "IssueUpdateBean",
      "method": "POST",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}/transitions"
    },
    "updateComment": {
      "bodyType": "CommentJsonBean",
      "method": "PUT",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "CommentJsonBean",
      "url": "/api/2/issue/{issueIdOrKey}/comment/{id}"
    },
    "updateRemoteIssueLink": {
      "bodyType": "RemoteIssueLinkRequest",
      "method": "PUT",
      "params": {
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "linkId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issue/{issueIdOrKey}/remotelink/{linkId}"
    },
    "updateWorklog": {
      "bodyType": "WorklogJsonBean",
      "method": "PUT",
      "params": {
        "adjustEstimate": {
          "enum": [
            "new",
            "leave",
            "auto"
          ],
          "in": "query",
          "type": "string"
        },
        "expand": {
          "in": "query",
          "type": "string"
        },
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "issueIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "newEstimate": {
          "in": "query",
          "type": "string"
        },
        "notifyUsers": {
          "in": "query",
          "type": "boolean"
        },
        "overrideEditableFlag": {
          "in": "query",
          "type": "boolean"
        }
      },
      "responseType": "WorklogJsonBean",
      "url": "/api/2/issue/{issueIdOrKey}/worklog/{id}"
    }
  },
  "issueLink": {
    "createIssueLink": {
      "bodyType": "LinkIssueRequestJsonBean",
      "method": "POST",
      "url": "/api/2/issueLink"
    },
    "deleteIssueLink": {
      "method": "DELETE",
      "params": {
        "linkId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issueLink/{linkId}"
    },
    "getIssueLink": {
      "method": "GET",
      "params": {
        "linkId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "IssueLinkJsonBean",
      "url": "/api/2/issueLink/{linkId}"
    }
  },
  "issueLinkType": {
    "createIssueLinkType": {
      "bodyType": "IssueLinkTypeJsonBean",
      "method": "POST",
      "responseType": "IssueLinkTypeJsonBean",
      "url": "/api/2/issueLinkType"
    },
    "deleteIssueLinkType": {
      "method": "DELETE",
      "params": {
        "issueLinkTypeId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issueLinkType/{issueLinkTypeId}"
    },
    "getIssueLinkType": {
      "method": "GET",
      "params": {
        "issueLinkTypeId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "IssueLinkTypeJsonBean",
      "url": "/api/2/issueLinkType/{issueLinkTypeId}"
    },
    "getIssueLinkTypes": {
      "method": "GET",
      "responseType": "IssueLinkTypesBean",
      "url": "/api/2/issueLinkType"
    },
    "updateIssueLinkType": {
      "bodyType": "IssueLinkTypeJsonBean",
      "method": "PUT",
      "params": {
        "issueLinkTypeId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "IssueLinkTypeJsonBean",
      "url": "/api/2/issueLinkType/{issueLinkTypeId}"
    }
  },
  "issuesecurityschemes": {
    "getIssueSecurityScheme": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "SecuritySchemeJsonBean",
      "url": "/api/2/issuesecurityschemes/{id}"
    },
    "getIssueSecuritySchemes": {
      "method": "GET",
      "responseType": "SecuritySchemesJsonBean",
      "url": "/api/2/issuesecurityschemes"
    }
  },
  "issuetype": {
    "createIssueType": {
      "bodyType": "IssueTypeCreateBean",
      "method": "POST",
      "responseType": "IssueTypeJsonBean",
      "url": "/api/2/issuetype"
    },
    "deleteIssueType": {
      "method": "DELETE",
      "params": {
        "alternativeIssueTypeId": {
          "in": "query",
          "type": "string"
        },
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issuetype/{id}"
    },
    "deleteIssueTypeProperty": {
      "method": "DELETE",
      "params": {
        "issueTypeId": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issuetype/{issueTypeId}/properties/{propertyKey}"
    },
    "getAllIssueTypesForUser": {
      "method": "GET",
      "responseType": "IssueTypeJsonBean[]",
      "url": "/api/2/issuetype"
    },
    "getAlternativeIssueTypes": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "IssueTypeJsonBean[]",
      "url": "/api/2/issuetype/{id}/alternatives"
    },
    "getIssueType": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "IssueTypeJsonBean",
      "url": "/api/2/issuetype/{id}"
    },
    "getIssueTypeProperty": {
      "method": "GET",
      "params": {
        "issueTypeId": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "EntityPropertyBean",
      "url": "/api/2/issuetype/{issueTypeId}/properties/{propertyKey}"
    },
    "getIssueTypePropertyKeys": {
      "method": "GET",
      "params": {
        "issueTypeId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "EntityPropertiesKeysBean",
      "url": "/api/2/issuetype/{issueTypeId}/properties"
    },
    "loadIssueTypeAvatar": {
      "bodyType": "ComAtlassianJiraRestV2IssueIssueTypeResourceCreateIssueTypeAvatarPostBody",
      "method": "POST",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "size": {
          "in": "query",
          "required": true,
          "type": "integer"
        },
        "x": {
          "in": "query",
          "type": "integer"
        },
        "y": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "AvatarBean",
      "url": "/api/2/issuetype/{id}/avatar2"
    },
    "setIssueTypeProperty": {
      "bodyType": "ComAtlassianJiraRestV2IssueCommentPropertyResourceSetCommentPropertyPutBody",
      "method": "PUT",
      "params": {
        "issueTypeId": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/issuetype/{issueTypeId}/properties/{propertyKey}"
    },
    "updateIssueType": {
      "bodyType": "IssueTypeUpdateBean",
      "method": "PUT",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "IssueTypeJsonBean",
      "url": "/api/2/issuetype/{id}"
    }
  },
  "jql": {
    "convertUserIdentifiersToAccountIDsInJqlQueries": {
      "bodyType": "JqlPersonalDataMigrationRequest",
      "method": "POST",
      "responseType": "JqlPersonalDataMigrationResponse",
      "url": "/api/2/jql/pdcleaner"
    },
    "getFieldAutoCompleteSuggestions": {
      "method": "GET",
      "params": {
        "fieldName": {
          "in": "query",
          "type": "string"
        },
        "fieldValue": {
          "in": "query",
          "type": "string"
        },
        "predicateName": {
          "in": "query",
          "type": "string"
        },
        "predicateValue": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "AutoCompleteResultWrapper",
      "url": "/api/2/jql/autocompletedata/suggestions"
    },
    "getFieldReferenceData": {
      "method": "GET",
      "responseType": "AutoCompleteResponseBean",
      "url": "/api/2/jql/autocompletedata"
    }
  },
  "mypermissions": {
    "getMyPermissions": {
      "method": "GET",
      "params": {
        "issueId": {
          "in": "query",
          "type": "string"
        },
        "issueKey": {
          "in": "query",
          "type": "string"
        },
        "permissions": {
          "in": "query",
          "type": "string"
        },
        "projectId": {
          "in": "query",
          "type": "string"
        },
        "projectKey": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "PermissionsJsonBean",
      "url": "/api/2/mypermissions"
    }
  },
  "mypreferences": {
    "deleteLocale": {
      "method": "DELETE",
      "url": "/api/2/mypreferences/locale"
    },
    "deletePreference": {
      "method": "DELETE",
      "params": {
        "key": {
          "in": "query",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/mypreferences"
    },
    "getLocale": {
      "method": "GET",
      "responseType": "LocaleBean",
      "url": "/api/2/mypreferences/locale"
    },
    "getPreference": {
      "method": "GET",
      "params": {
        "key": {
          "in": "query",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/mypreferences"
    },
    "setLocale": {
      "bodyType": "LocaleBean",
      "method": "PUT",
      "url": "/api/2/mypreferences/locale"
    },
    "setPreference": {
      "method": "PUT",
      "params": {
        "key": {
          "in": "query",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/mypreferences"
    }
  },
  "myself": {
    "getCurrentUser": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "User",
      "url": "/api/2/myself"
    }
  },
  "notificationscheme": {
    "getNotificationScheme": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "NotificationSchemeBean",
      "url": "/api/2/notificationscheme/{id}"
    },
    "getNotificationSchemesPaginated": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "PageBeanNotificationSchemeBean",
      "url": "/api/2/notificationscheme"
    }
  },
  "permissions": {
    "getAllPermissions": {
      "method": "GET",
      "responseType": "PermissionsJsonBean",
      "url": "/api/2/permissions"
    },
    "getPermittedProjects": {
      "bodyType": "PermissionsKeysBean",
      "method": "POST",
      "responseType": "PermittedProjectsBean",
      "url": "/api/2/permissions/project"
    }
  },
  "permissionscheme": {
    "createPermissionGrant": {
      "bodyType": "PermissionGrantBean",
      "method": "POST",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "schemeId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "PermissionGrantBean",
      "url": "/api/2/permissionscheme/{schemeId}/permission"
    },
    "createPermissionScheme": {
      "bodyType": "PermissionSchemeBean",
      "method": "POST",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "PermissionSchemeBean",
      "url": "/api/2/permissionscheme"
    },
    "deletePermissionScheme": {
      "method": "DELETE",
      "params": {
        "schemeId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "url": "/api/2/permissionscheme/{schemeId}"
    },
    "deletePermissionSchemeEntity": {
      "method": "DELETE",
      "params": {
        "permissionId": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "schemeId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "url": "/api/2/permissionscheme/{schemeId}/permission/{permissionId}"
    },
    "getAllPermissionSchemes": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "PermissionSchemesBean",
      "url": "/api/2/permissionscheme"
    },
    "getPermissionScheme": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "schemeId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "PermissionSchemeBean",
      "url": "/api/2/permissionscheme/{schemeId}"
    },
    "getPermissionSchemeGrant": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "permissionId": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "schemeId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "PermissionGrantBean",
      "url": "/api/2/permissionscheme/{schemeId}/permission/{permissionId}"
    },
    "getPermissionSchemeGrants": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "schemeId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "PermissionGrantsBean",
      "url": "/api/2/permissionscheme/{schemeId}/permission"
    },
    "updatePermissionScheme": {
      "bodyType": "PermissionSchemeBean",
      "method": "PUT",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "schemeId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "PermissionSchemeBean",
      "url": "/api/2/permissionscheme/{schemeId}"
    }
  },
  "priority": {
    "getPriorities": {
      "method": "GET",
      "responseType": "PriorityJsonBean[]",
      "url": "/api/2/priority"
    },
    "getPriority": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "PriorityJsonBean",
      "url": "/api/2/priority/{id}"
    }
  },
  "project": {
    "addActorsToProjectRole": {
      "bodyType": "ActorsMap",
      "method": "POST",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "ProjectRoleBean",
      "url": "/api/2/project/{projectIdOrKey}/role/{id}"
    },
    "assignPermissionScheme": {
      "bodyType": "IdBean",
      "method": "PUT",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "projectKeyOrId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "PermissionSchemeBean",
      "url": "/api/2/project/{projectKeyOrId}/permissionscheme"
    },
    "createProject": {
      "bodyType": "ProjectInputBean",
      "method": "POST",
      "responseType": "ProjectIdentity",
      "url": "/api/2/project"
    },
    "deleteActorsFromProjectRole": {
      "method": "DELETE",
      "params": {
        "group": {
          "in": "query",
          "type": "string"
        },
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "user": {
          "in": "query",
          "type": "string"
        }
      },
      "url": "/api/2/project/{projectIdOrKey}/role/{id}"
    },
    "deleteProject": {
      "method": "DELETE",
      "params": {
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/project/{projectIdOrKey}"
    },
    "deleteProjectAvatar": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/project/{projectIdOrKey}/avatar/{id}"
    },
    "deleteProjectProperty": {
      "method": "DELETE",
      "params": {
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/project/{projectIdOrKey}/properties/{propertyKey}"
    },
    "getAccessibleProjectTypeByKey": {
      "method": "GET",
      "params": {
        "projectTypeKey": {
          "enum": [
            "business",
            "service_desk",
            "software"
          ],
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "ProjectTypeBean",
      "url": "/api/2/project/type/{projectTypeKey}/accessible"
    },
    "getAllProjectAvatars": {
      "method": "GET",
      "params": {
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "ProjectAvatars",
      "url": "/api/2/project/{projectIdOrKey}/avatars"
    },
    "getAllProjects": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "recent": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "ProjectBean[]",
      "url": "/api/2/project"
    },
    "getAllProjectTypes": {
      "method": "GET",
      "responseType": "ProjectTypeBean[]",
      "url": "/api/2/project/type"
    },
    "getAllStatusesForProject": {
      "method": "GET",
      "params": {
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "IssueTypeWithStatusJsonBean[]",
      "url": "/api/2/project/{projectIdOrKey}/statuses"
    },
    "getAssignedPermissionScheme": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "projectKeyOrId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "PermissionSchemeBean",
      "url": "/api/2/project/{projectKeyOrId}/permissionscheme"
    },
    "getProject": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "ProjectBean",
      "url": "/api/2/project/{projectIdOrKey}"
    },
    "getProjectComponents": {
      "method": "GET",
      "params": {
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "ComponentBean[]",
      "url": "/api/2/project/{projectIdOrKey}/components"
    },
    "getProjectComponentsPaginated": {
      "method": "GET",
      "params": {
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "description",
            "-description",
            "+description",
            "issueCount",
            "-issueCount",
            "+issueCount",
            "lead",
            "-lead",
            "+lead",
            "name",
            "-name",
            "+name"
          ],
          "in": "query",
          "type": "string"
        },
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "query": {
          "in": "query",
          "type": "string"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "PageBeanComponentWithIssueCountBean",
      "url": "/api/2/project/{projectIdOrKey}/component"
    },
    "getProjectIssueSecurityLevels": {
      "method": "GET",
      "params": {
        "projectKeyOrId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "SecurityListLevelJsonBean",
      "url": "/api/2/project/{projectKeyOrId}/securitylevel"
    },
    "getProjectIssueSecurityScheme": {
      "method": "GET",
      "params": {
        "projectKeyOrId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "SecuritySchemeJsonBean",
      "url": "/api/2/project/{projectKeyOrId}/issuesecuritylevelscheme"
    },
    "getProjectNotificationScheme": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "projectKeyOrId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "NotificationSchemeBean",
      "url": "/api/2/project/{projectKeyOrId}/notificationscheme"
    },
    "getProjectProperty": {
      "method": "GET",
      "params": {
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "EntityPropertyBean",
      "url": "/api/2/project/{projectIdOrKey}/properties/{propertyKey}"
    },
    "getProjectPropertyKeys": {
      "method": "GET",
      "params": {
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "EntityPropertiesKeysBean",
      "url": "/api/2/project/{projectIdOrKey}/properties"
    },
    "getProjectRoleDetails": {
      "method": "GET",
      "params": {
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "ProjectRoleBean[]",
      "url": "/api/2/project/{projectIdOrKey}/roledetails"
    },
    "getProjectRoleForProject": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "ProjectRoleBean",
      "url": "/api/2/project/{projectIdOrKey}/role/{id}"
    },
    "getProjectRolesForProject": {
      "method": "GET",
      "params": {
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/project/{projectIdOrKey}/role"
    },
    "getProjectsPaginated": {
      "method": "GET",
      "params": {
        "action": {
          "enum": [
            "view",
            "edit"
          ],
          "in": "query",
          "type": "string"
        },
        "categoryId": {
          "in": "query",
          "type": "integer"
        },
        "expand": {
          "in": "query",
          "type": "string"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "category",
            "-category",
            "+category",
            "key",
            "-key",
            "+key",
            "name",
            "-name",
            "+name",
            "owner",
            "-owner",
            "+owner"
          ],
          "in": "query",
          "type": "string"
        },
        "query": {
          "in": "query",
          "type": "string"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        },
        "typeKey": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "PageBeanProjectBean",
      "url": "/api/2/project/search"
    },
    "getProjectTypeByKey": {
      "method": "GET",
      "params": {
        "projectTypeKey": {
          "enum": [
            "business",
            "service_desk",
            "software"
          ],
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "ProjectTypeBean",
      "url": "/api/2/project/type/{projectTypeKey}"
    },
    "getProjectVersions": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "VersionBean[]",
      "url": "/api/2/project/{projectIdOrKey}/versions"
    },
    "getProjectVersionsPaginated": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "orderBy": {
          "enum": [
            "description",
            "-description",
            "+description",
            "name",
            "-name",
            "+name",
            "releaseDate",
            "-releaseDate",
            "+releaseDate",
            "sequence",
            "-sequence",
            "+sequence",
            "startDate",
            "-startDate",
            "+startDate"
          ],
          "in": "query",
          "type": "string"
        },
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "query": {
          "in": "query",
          "type": "string"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        },
        "status": {
          "enum": [
            "released",
            "unreleased",
            "archived"
          ],
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "PageBeanVersionBean",
      "url": "/api/2/project/{projectIdOrKey}/version"
    },
    "loadProjectAvatar": {
      "bodyType": "ComAtlassianJiraRestV2IssueIssueTypeResourceCreateIssueTypeAvatarPostBody",
      "method": "POST",
      "params": {
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "size": {
          "in": "query",
          "type": "integer"
        },
        "x": {
          "in": "query",
          "type": "integer"
        },
        "y": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "AvatarBean",
      "url": "/api/2/project/{projectIdOrKey}/avatar2"
    },
    "setActorsForProjectRole": {
      "bodyType": "ProjectRoleActorsUpdateBean",
      "method": "PUT",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "ProjectRoleBean",
      "url": "/api/2/project/{projectIdOrKey}/role/{id}"
    },
    "setProjectAvatar": {
      "bodyType": "AvatarBean",
      "method": "PUT",
      "params": {
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/project/{projectIdOrKey}/avatar"
    },
    "setProjectProperty": {
      "bodyType": "ComAtlassianJiraRestV2IssueCommentPropertyResourceSetCommentPropertyPutBody",
      "method": "PUT",
      "params": {
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/project/{projectIdOrKey}/properties/{propertyKey}"
    },
    "updateProject": {
      "bodyType": "ProjectInputBean",
      "method": "PUT",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "ProjectBean",
      "url": "/api/2/project/{projectIdOrKey}"
    },
    "updateProjectType": {
      "method": "PUT",
      "params": {
        "newProjectTypeKey": {
          "enum": [
            "software",
            "service_desk",
            "business"
          ],
          "in": "path",
          "required": true,
          "type": "string"
        },
        "projectIdOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "ProjectBean",
      "url": "/api/2/project/{projectIdOrKey}/type/{newProjectTypeKey}"
    }
  },
  "projectCategory": {
    "createProjectCategory": {
      "bodyType": "ProjectCategoryBean",
      "method": "POST",
      "responseType": "ProjectCategoryBean",
      "url": "/api/2/projectCategory"
    },
    "deleteProjectCategory": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "url": "/api/2/projectCategory/{id}"
    },
    "getAllProjectCategories": {
      "method": "GET",
      "responseType": "ProjectCategoryBean[]",
      "url": "/api/2/projectCategory"
    },
    "getProjectCategoryById": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "ProjectCategoryBean",
      "url": "/api/2/projectCategory/{id}"
    },
    "updateProjectCategory": {
      "bodyType": "ProjectCategoryBean",
      "method": "PUT",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "ProjectCategoryJsonBean",
      "url": "/api/2/projectCategory/{id}"
    }
  },
  "projectvalidate": {
    "getValidProjectKey": {
      "method": "GET",
      "params": {
        "key": {
          "in": "query",
          "type": "string"
        }
      },
      "url": "/api/2/projectvalidate/validProjectKey"
    },
    "getValidProjectName": {
      "method": "GET",
      "params": {
        "name": {
          "in": "query",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/projectvalidate/validProjectName"
    },
    "validateProjectKey": {
      "method": "GET",
      "params": {
        "key": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "ErrorCollection",
      "url": "/api/2/projectvalidate/key"
    }
  },
  "resolution": {
    "getResolution": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "ResolutionBean",
      "url": "/api/2/resolution/{id}"
    },
    "getResolutions": {
      "method": "GET",
      "responseType": "ResolutionBean[]",
      "url": "/api/2/resolution"
    }
  },
  "role": {
    "addDefaultActorsToProjectRole": {
      "bodyType": "ActorInputBean",
      "method": "POST",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "ProjectRoleBean",
      "url": "/api/2/role/{id}/actors"
    },
    "createProjectRole": {
      "bodyType": "CreateUpdateRoleRequestBean",
      "method": "POST",
      "responseType": "ProjectRoleBean",
      "url": "/api/2/role"
    },
    "deleteDefaultActorsFromProjectRole": {
      "method": "DELETE",
      "params": {
        "group": {
          "in": "query",
          "type": "string"
        },
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "user": {
          "in": "query",
          "type": "string"
        }
      },
      "url": "/api/2/role/{id}/actors"
    },
    "deleteProjectRole": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "swap": {
          "in": "query",
          "type": "integer"
        }
      },
      "url": "/api/2/role/{id}"
    },
    "fullyUpdateProjectRole": {
      "bodyType": "CreateUpdateRoleRequestBean",
      "method": "PUT",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "ProjectRoleBean",
      "url": "/api/2/role/{id}"
    },
    "getAllProjectRoles": {
      "method": "GET",
      "responseType": "ProjectRoleBean[]",
      "url": "/api/2/role"
    },
    "getDefaultActorsForProjectRole": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "ProjectRoleBean",
      "url": "/api/2/role/{id}/actors"
    },
    "getProjectRoleById": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "ProjectRoleBean",
      "url": "/api/2/role/{id}"
    },
    "partialUpdateProjectRole": {
      "bodyType": "CreateUpdateRoleRequestBean",
      "method": "POST",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "ProjectRoleBean",
      "url": "/api/2/role/{id}"
    }
  },
  "screens": {
    "addFieldToDefaultScreen": {
      "method": "POST",
      "params": {
        "fieldId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/screens/addToDefault/{fieldId}"
    },
    "addScreenTabField": {
      "bodyType": "AddFieldBean",
      "method": "POST",
      "params": {
        "screenId": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "tabId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "ScreenableFieldBean",
      "url": "/api/2/screens/{screenId}/tabs/{tabId}/fields"
    },
    "createScreenTab": {
      "bodyType": "ScreenableTabBean",
      "method": "POST",
      "params": {
        "screenId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "ScreenableTabBean",
      "url": "/api/2/screens/{screenId}/tabs"
    },
    "deleteScreenTab": {
      "method": "DELETE",
      "params": {
        "screenId": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "tabId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "url": "/api/2/screens/{screenId}/tabs/{tabId}"
    },
    "getAllScreens": {
      "method": "GET",
      "params": {
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "PageBeanScreenBean",
      "url": "/api/2/screens"
    },
    "getAllScreenTabFields": {
      "method": "GET",
      "params": {
        "projectKey": {
          "in": "query",
          "type": "string"
        },
        "screenId": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "tabId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "ScreenableTabBean[]",
      "url": "/api/2/screens/{screenId}/tabs/{tabId}/fields"
    },
    "getAllScreenTabs": {
      "method": "GET",
      "params": {
        "projectKey": {
          "in": "query",
          "type": "string"
        },
        "screenId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "ScreenableTabBean[]",
      "url": "/api/2/screens/{screenId}/tabs"
    },
    "getAvailableScreenFields": {
      "method": "GET",
      "params": {
        "screenId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "ScreenableFieldBean[]",
      "url": "/api/2/screens/{screenId}/availableFields"
    },
    "moveScreenTab": {
      "method": "POST",
      "params": {
        "pos": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "screenId": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "tabId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "url": "/api/2/screens/{screenId}/tabs/{tabId}/move/{pos}"
    },
    "moveScreenTabField": {
      "bodyType": "MoveFieldBean",
      "method": "POST",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "screenId": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "tabId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "url": "/api/2/screens/{screenId}/tabs/{tabId}/fields/{id}/move"
    },
    "removeScreenTabField": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "screenId": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "tabId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "url": "/api/2/screens/{screenId}/tabs/{tabId}/fields/{id}"
    },
    "updateScreenTab": {
      "bodyType": "ScreenableTabBean",
      "method": "PUT",
      "params": {
        "screenId": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "tabId": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "ScreenableTabBean",
      "url": "/api/2/screens/{screenId}/tabs/{tabId}"
    }
  },
  "search": {
    "searchForIssuesUsingJqlGet": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "fields": {
          "in": "query",
          "itemsType": "string",
          "type": "array"
        },
        "fieldsByKeys": {
          "in": "query",
          "type": "boolean"
        },
        "jql": {
          "in": "query",
          "type": "string"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "properties": {
          "in": "query",
          "itemsType": "string",
          "type": "array"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        },
        "validateQuery": {
          "enum": [
            "strict",
            "warn",
            "none",
            "true",
            "false"
          ],
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "SearchResultsBean",
      "url": "/api/2/search"
    },
    "searchForIssuesUsingJqlPost": {
      "bodyType": "SearchRequestBean",
      "method": "POST",
      "responseType": "SearchResultsBean",
      "url": "/api/2/search"
    }
  },
  "securitylevel": {
    "getIssueSecurityLevel": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "SecurityLevelJsonBean",
      "url": "/api/2/securitylevel/{id}"
    }
  },
  "serverInfo": {
    "getJiraInstanceInfo": {
      "method": "GET",
      "responseType": "ServerInfoBean",
      "url": "/api/2/serverInfo"
    }
  },
  "session": {
    "createSession": {
      "bodyType": "AuthParams",
      "method": "POST",
      "responseType": "AuthSuccess",
      "url": "/auth/1/session"
    },
    "deleteSession": {
      "method": "DELETE",
      "url": "/auth/1/session"
    },
    "getSession": {
      "method": "GET",
      "responseType": "CurrentUser",
      "url": "/auth/1/session"
    }
  },
  "settings": {
    "getIssueNavigatorDefaultColumns": {
      "method": "GET",
      "responseType": "ColumnItem[]",
      "url": "/api/2/settings/columns"
    },
    "setIssueNavigatorDefaultColumns": {
      "method": "PUT",
      "url": "/api/2/settings/columns"
    }
  },
  "status": {
    "getAllStatuses": {
      "method": "GET",
      "responseType": "StatusJsonBean[]",
      "url": "/api/2/status"
    },
    "getStatus": {
      "method": "GET",
      "params": {
        "idOrName": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "StatusJsonBean",
      "url": "/api/2/status/{idOrName}"
    }
  },
  "statuscategory": {
    "getAllStatusCategories": {
      "method": "GET",
      "responseType": "StatusCategoryJsonBean[]",
      "url": "/api/2/statuscategory"
    },
    "getStatusCategory": {
      "method": "GET",
      "params": {
        "idOrKey": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "StatusCategoryJsonBean",
      "url": "/api/2/statuscategory/{idOrKey}"
    }
  },
  "task": {
    "cancelTask": {
      "method": "POST",
      "params": {
        "taskId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/task/{taskId}/cancel"
    },
    "getTask": {
      "method": "GET",
      "params": {
        "taskId": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "TaskProgressBeanObject",
      "url": "/api/2/task/{taskId}"
    }
  },
  "universal_avatar": {
    "deleteAvatar": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "owningObjectId": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "type": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/universal_avatar/type/{type}/owner/{owningObjectId}/avatar/{id}"
    },
    "getAvatars": {
      "method": "GET",
      "params": {
        "entityId": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "type": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "AvatarsBean",
      "url": "/api/2/universal_avatar/type/{type}/owner/{entityId}"
    },
    "loadAvatar": {
      "bodyType": "ComAtlassianJiraRestV2IssueIssueTypeResourceCreateIssueTypeAvatarPostBody",
      "method": "POST",
      "params": {
        "entityId": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "size": {
          "in": "query",
          "required": true,
          "type": "integer"
        },
        "type": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "x": {
          "in": "query",
          "type": "integer"
        },
        "y": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "AvatarBean",
      "url": "/api/2/universal_avatar/type/{type}/owner/{entityId}"
    }
  },
  "user": {
    "bulkGetUsers": {
      "method": "GET",
      "params": {
        "accountId": {
          "in": "query",
          "itemsType": "string",
          "type": "array"
        },
        "key": {
          "in": "query",
          "itemsType": "string",
          "type": "array"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        },
        "username": {
          "in": "query",
          "itemsType": "string",
          "type": "array"
        }
      },
      "responseType": "PageBeanUser",
      "url": "/api/2/user/bulk"
    },
    "createUser": {
      "bodyType": "UserWriteBean",
      "method": "POST",
      "responseType": "User",
      "url": "/api/2/user"
    },
    "deleteUser": {
      "method": "DELETE",
      "params": {
        "accountId": {
          "in": "query",
          "type": "string"
        },
        "key": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "query",
          "type": "string"
        }
      },
      "url": "/api/2/user"
    },
    "deleteUserProperty": {
      "method": "DELETE",
      "params": {
        "accountId": {
          "in": "query",
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "userKey": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "query",
          "type": "string"
        }
      },
      "url": "/api/2/user/properties/{propertyKey}"
    },
    "findUserKeysByQuery": {
      "method": "GET",
      "params": {
        "includeInactive": {
          "in": "query",
          "type": "boolean"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "query": {
          "in": "query",
          "required": true,
          "type": "string"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "PageBeanUserKeyBean",
      "url": "/api/2/user/search/query/key"
    },
    "findUsers": {
      "method": "GET",
      "params": {
        "includeActive": {
          "in": "query",
          "type": "boolean"
        },
        "includeInactive": {
          "in": "query",
          "type": "boolean"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "property": {
          "in": "query",
          "type": "string"
        },
        "query": {
          "in": "query",
          "type": "string"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        },
        "username": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "User[]",
      "url": "/api/2/user/search"
    },
    "findUsersAssignableToIssues": {
      "method": "GET",
      "params": {
        "actionDescriptorId": {
          "in": "query",
          "type": "integer"
        },
        "issueKey": {
          "in": "query",
          "type": "string"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "project": {
          "in": "query",
          "type": "string"
        },
        "query": {
          "in": "query",
          "type": "string"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        },
        "username": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "User[]",
      "url": "/api/2/user/assignable/search"
    },
    "findUsersAssignableToProjects": {
      "method": "GET",
      "params": {
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "projectKeys": {
          "in": "query",
          "required": true,
          "type": "string"
        },
        "query": {
          "in": "query",
          "type": "string"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        },
        "username": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "User[]",
      "url": "/api/2/user/assignable/multiProjectSearch"
    },
    "findUsersByQuery": {
      "method": "GET",
      "params": {
        "includeInactive": {
          "in": "query",
          "type": "boolean"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "query": {
          "in": "query",
          "required": true,
          "type": "string"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "PageBeanUser",
      "url": "/api/2/user/search/query"
    },
    "findUsersForPicker": {
      "method": "GET",
      "params": {
        "exclude": {
          "in": "query",
          "itemsType": "string",
          "type": "array"
        },
        "excludeAccountIds": {
          "in": "query",
          "itemsType": "string",
          "type": "array"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "query": {
          "in": "query",
          "required": true,
          "type": "string"
        },
        "showAvatar": {
          "in": "query",
          "type": "boolean"
        }
      },
      "responseType": "UserPickerResultsBean",
      "url": "/api/2/user/picker"
    },
    "findUsersWithBrowsePermission": {
      "method": "GET",
      "params": {
        "issueKey": {
          "in": "query",
          "type": "string"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "projectKey": {
          "in": "query",
          "type": "string"
        },
        "query": {
          "in": "query",
          "type": "string"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        },
        "username": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "User[]",
      "url": "/api/2/user/viewissue/search"
    },
    "findUsersWithPermissions": {
      "method": "GET",
      "params": {
        "issueKey": {
          "in": "query",
          "type": "string"
        },
        "maxResults": {
          "in": "query",
          "type": "integer"
        },
        "permissions": {
          "in": "query",
          "required": true,
          "type": "string"
        },
        "projectKey": {
          "in": "query",
          "type": "string"
        },
        "query": {
          "in": "query",
          "type": "string"
        },
        "startAt": {
          "in": "query",
          "type": "integer"
        },
        "username": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "User[]",
      "url": "/api/2/user/permission/search"
    },
    "getUser": {
      "method": "GET",
      "params": {
        "accountId": {
          "in": "query",
          "type": "string"
        },
        "expand": {
          "in": "query",
          "type": "string"
        },
        "key": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "User",
      "url": "/api/2/user"
    },
    "getUserDefaultColumns": {
      "method": "GET",
      "params": {
        "accountId": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "ColumnItem[]",
      "url": "/api/2/user/columns"
    },
    "getUserGroups": {
      "method": "GET",
      "params": {
        "accountId": {
          "in": "query",
          "type": "string"
        },
        "key": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "GroupJsonBean[]",
      "url": "/api/2/user/groups"
    },
    "getUserProperty": {
      "method": "GET",
      "params": {
        "accountId": {
          "in": "query",
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "userKey": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "EntityPropertyBean",
      "url": "/api/2/user/properties/{propertyKey}"
    },
    "getUserPropertyKeys": {
      "method": "GET",
      "params": {
        "accountId": {
          "in": "query",
          "type": "string"
        },
        "userKey": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "EntityPropertiesKeysBean",
      "url": "/api/2/user/properties"
    },
    "resetUserDefaultColumns": {
      "method": "DELETE",
      "params": {
        "accountId": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "query",
          "type": "string"
        }
      },
      "url": "/api/2/user/columns"
    },
    "setUserDefaultColumns": {
      "method": "PUT",
      "params": {
        "accountId": {
          "in": "query",
          "type": "string"
        }
      },
      "url": "/api/2/user/columns"
    },
    "setUserProperty": {
      "bodyType": "ComAtlassianJiraRestV2IssueCommentPropertyResourceSetCommentPropertyPutBody",
      "method": "PUT",
      "params": {
        "accountId": {
          "in": "query",
          "type": "string"
        },
        "propertyKey": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "userKey": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "query",
          "type": "string"
        }
      },
      "url": "/api/2/user/properties/{propertyKey}"
    }
  },
  "version": {
    "createVersion": {
      "bodyType": "VersionBean",
      "method": "POST",
      "responseType": "VersionBean",
      "url": "/api/2/version"
    },
    "deleteAndReplaceVersion": {
      "bodyType": "DeleteAndReplaceVersionBean",
      "method": "POST",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/version/{id}/removeAndSwap"
    },
    "deleteVersion": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "moveAffectedIssuesTo": {
          "in": "query",
          "type": "string"
        },
        "moveFixIssuesTo": {
          "in": "query",
          "type": "string"
        }
      },
      "url": "/api/2/version/{id}"
    },
    "getVersion": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "VersionBean",
      "url": "/api/2/version/{id}"
    },
    "getVersionsRelatedIssuesCount": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "VersionIssueCountsBean",
      "url": "/api/2/version/{id}/relatedIssueCounts"
    },
    "getVersionsUnresolvedIssuesCount": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "VersionUnresolvedIssueCountsBean",
      "url": "/api/2/version/{id}/unresolvedIssueCount"
    },
    "mergeVersions": {
      "method": "PUT",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "moveIssuesTo": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/version/{id}/mergeto/{moveIssuesTo}"
    },
    "moveVersion": {
      "bodyType": "VersionMoveBean",
      "method": "POST",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "VersionBean",
      "url": "/api/2/version/{id}/move"
    },
    "updateVersion": {
      "bodyType": "VersionBean",
      "method": "PUT",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "VersionBean",
      "url": "/api/2/version/{id}"
    }
  },
  "workflow": {
    "createWorkflowTransitionProperty": {
      "bodyType": "PropertyBean",
      "method": "POST",
      "params": {
        "key": {
          "in": "query",
          "required": true,
          "type": "string"
        },
        "transitionId": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "workflowMode": {
          "enum": [
            "live",
            "draft"
          ],
          "in": "query",
          "type": "string"
        },
        "workflowName": {
          "in": "query",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "PropertyBean",
      "url": "/api/2/workflow/transitions/{transitionId}/properties"
    },
    "deleteWorkflowTransitionProperty": {
      "method": "DELETE",
      "params": {
        "key": {
          "in": "query",
          "required": true,
          "type": "string"
        },
        "transitionId": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "workflowMode": {
          "enum": [
            "live",
            "draft"
          ],
          "in": "query",
          "type": "string"
        },
        "workflowName": {
          "in": "query",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/workflow/transitions/{transitionId}/properties"
    },
    "getAllWorkflows": {
      "method": "GET",
      "params": {
        "workflowName": {
          "in": "query",
          "type": "string"
        }
      },
      "url": "/api/2/workflow"
    },
    "getWorkflowTransitionProperties": {
      "method": "GET",
      "params": {
        "includeReservedKeys": {
          "in": "query",
          "type": "boolean"
        },
        "key": {
          "in": "query",
          "type": "string"
        },
        "transitionId": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "workflowMode": {
          "enum": [
            "live",
            "draft"
          ],
          "in": "query",
          "type": "string"
        },
        "workflowName": {
          "in": "query",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "PropertyBean[]",
      "url": "/api/2/workflow/transitions/{transitionId}/properties"
    },
    "updateWorkflowTransitionProperty": {
      "bodyType": "PropertyBean",
      "method": "PUT",
      "params": {
        "key": {
          "in": "query",
          "required": true,
          "type": "string"
        },
        "transitionId": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "workflowMode": {
          "enum": [
            "live",
            "draft"
          ],
          "in": "query",
          "type": "string"
        },
        "workflowName": {
          "in": "query",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "PropertyBean",
      "url": "/api/2/workflow/transitions/{transitionId}/properties"
    }
  },
  "workflowscheme": {
    "createDraftWorkflowScheme": {
      "method": "POST",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "WorkflowSchemeBean",
      "url": "/api/2/workflowscheme/{id}/createdraft"
    },
    "createWorkflowScheme": {
      "bodyType": "WorkflowSchemeBean",
      "method": "POST",
      "responseType": "WorkflowSchemeBean",
      "url": "/api/2/workflowscheme"
    },
    "deleteDefaultWorkflow": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "updateDraftIfNeeded": {
          "in": "query",
          "type": "boolean"
        }
      },
      "url": "/api/2/workflowscheme/{id}/default"
    },
    "deleteDraftDefaultWorkflow": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "url": "/api/2/workflowscheme/{id}/draft/default"
    },
    "deleteDraftWorkflowScheme": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "url": "/api/2/workflowscheme/{id}/draft"
    },
    "deleteIssueTypesForWorkflowInDraftWorkflowScheme": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "workflowName": {
          "in": "query",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/workflowscheme/{id}/draft/workflow"
    },
    "deleteIssueTypesForWorkflowInWorkflowScheme": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "updateDraftIfNeeded": {
          "in": "query",
          "type": "boolean"
        },
        "workflowName": {
          "in": "query",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/workflowscheme/{id}/workflow"
    },
    "deleteWorkflowForIssueTypeInDraftWorkflowScheme": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "issueType": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/api/2/workflowscheme/{id}/draft/issuetype/{issueType}"
    },
    "deleteWorkflowForIssueTypeInWorkflowScheme": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "issueType": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "updateDraftIfNeeded": {
          "in": "query",
          "type": "boolean"
        }
      },
      "url": "/api/2/workflowscheme/{id}/issuetype/{issueType}"
    },
    "deleteWorkflowScheme": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "url": "/api/2/workflowscheme/{id}"
    },
    "getDefaultWorkflow": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "returnDraftIfExists": {
          "in": "query",
          "type": "boolean"
        }
      },
      "responseType": "DefaultBean",
      "url": "/api/2/workflowscheme/{id}/default"
    },
    "getDraftDefaultWorkflow": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "DefaultBean",
      "url": "/api/2/workflowscheme/{id}/draft/default"
    },
    "getDraftWorkflowScheme": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "WorkflowSchemeBean",
      "url": "/api/2/workflowscheme/{id}/draft"
    },
    "getIssueTypesForWorkflowsInDraftWorkflowScheme": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "workflowName": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "WorkflowMappingBean",
      "url": "/api/2/workflowscheme/{id}/draft/workflow"
    },
    "getIssueTypesForWorkflowsInWorkflowScheme": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "returnDraftIfExists": {
          "in": "query",
          "type": "boolean"
        },
        "workflowName": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "WorkflowMappingBean",
      "url": "/api/2/workflowscheme/{id}/workflow"
    },
    "getWorkflowForIssueTypeInDraftWorkflowScheme": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "issueType": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "IssueTypeMappingBean",
      "url": "/api/2/workflowscheme/{id}/draft/issuetype/{issueType}"
    },
    "getWorkflowForIssueTypeInWorkflowScheme": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "issueType": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "returnDraftIfExists": {
          "in": "query",
          "type": "boolean"
        }
      },
      "responseType": "IssueTypeMappingBean",
      "url": "/api/2/workflowscheme/{id}/issuetype/{issueType}"
    },
    "getWorkflowScheme": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "returnDraftIfExists": {
          "in": "query",
          "type": "boolean"
        }
      },
      "responseType": "WorkflowSchemeBean",
      "url": "/api/2/workflowscheme/{id}"
    },
    "setIssueTypesForWorkflowInWorkflowScheme": {
      "bodyType": "WorkflowMappingBean",
      "method": "PUT",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "workflowName": {
          "in": "query",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "WorkflowSchemeBean",
      "url": "/api/2/workflowscheme/{id}/workflow"
    },
    "setWorkflowForIssueTypeInDraftWorkflowScheme": {
      "bodyType": "IssueTypeMappingBean",
      "method": "PUT",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "issueType": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "WorkflowSchemeBean",
      "url": "/api/2/workflowscheme/{id}/draft/issuetype/{issueType}"
    },
    "setWorkflowForIssueTypeInWorkflowScheme": {
      "bodyType": "IssueTypeMappingBean",
      "method": "PUT",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "issueType": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "responseType": "WorkflowSchemeBean",
      "url": "/api/2/workflowscheme/{id}/issuetype/{issueType}"
    },
    "updateDefaultWorkflow": {
      "bodyType": "DefaultBean",
      "method": "PUT",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "WorkflowSchemeBean",
      "url": "/api/2/workflowscheme/{id}/default"
    },
    "updateDraftDefaultWorkflow": {
      "bodyType": "DefaultBean",
      "method": "PUT",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "WorkflowSchemeBean",
      "url": "/api/2/workflowscheme/{id}/draft/default"
    },
    "updateDraftWorkflowScheme": {
      "bodyType": "WorkflowSchemeBean",
      "method": "PUT",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "WorkflowSchemeBean",
      "url": "/api/2/workflowscheme/{id}/draft"
    },
    "updateWorkflowScheme": {
      "bodyType": "WorkflowSchemeBean",
      "method": "PUT",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "responseType": "WorkflowSchemeBean",
      "url": "/api/2/workflowscheme/{id}"
    }
  },
  "worklog": {
    "getIDsOfDeletedWorklogs": {
      "method": "GET",
      "params": {
        "since": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "WorklogChangedSinceBean",
      "url": "/api/2/worklog/deleted"
    },
    "getIDsOfUpdatedWorklogs": {
      "method": "GET",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        },
        "since": {
          "in": "query",
          "type": "integer"
        }
      },
      "responseType": "WorklogChangedSinceBean",
      "url": "/api/2/worklog/updated"
    },
    "getWorklogs": {
      "bodyType": "WorklogIdsRequestBean",
      "method": "POST",
      "params": {
        "expand": {
          "in": "query",
          "type": "string"
        }
      },
      "responseType": "WorklogJsonBean[]",
      "url": "/api/2/worklog/list"
    }
  }
}
